(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{333:function(t,e,i){"use strict";i.r(e);var _=i(1),v=Object(_.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),i("p",[t._v("此篇开始，笔者已着手开发。常规的项目，因为涉及到多人合作，会有项目经理、产品经理、专门的架构师、分析师、美工、前端开发、后台开发、测试.......然而笔者只有自己，所以在开发流程上，可能不太正规，还请见谅。")]),t._v(" "),i("p",[t._v("笔者基本开发流程是：")]),t._v(" "),t._m(1),t._v(" "),i("p",[t._v("那么本章，我们就从前端说起。")]),t._v(" "),i("p",[t._v("项目地址（开发中 开发中 开发中）：\n"),i("a",{attrs:{href:"https://github.com/zhuzhaohua/kobuta-payment-web",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/zhuzhaohua/kobuta-payment-web"),i("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),i("p",[t._v("关于前后端分离，可以参看另一篇博客，有详尽介绍："),i("router-link",{attrs:{to:"./../other/20190915_前后端分离.html"}},[t._v("前后端分离详解")])],1),t._v(" "),t._m(3),t._v(" "),i("p",[t._v("为了实现前端要做的这些事情，如果逐一实现，势必是一件非常浩大的工程。其实我们要做的东西，已经有人做好了，开源社区有很多成型的脚手架，使用它们可以快速的搭建前端的开发环境，并且实现基本的功能，我们只需要实现业务画面就可以了。\n这里笔者使用vue-admin-template。基于vue生态圈的前端脚手架。其已有的实现包括：")]),t._v(" "),t._m(4),t._v(" "),i("p",[t._v("这些涵盖了我们的大部分需求。在kobuta-payment-web的项目中，我们还可能要追加：")]),t._v(" "),t._m(5)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前端篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端篇","aria-hidden":"true"}},[this._v("#")]),this._v(" 前端篇")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("1 vue前端先行，功能设计和前端开发就一起做了。大体上对整体功能有个印象，然后从某一功能点出发，逐步扩展。因为使用mock，所以在前端完成后，所需要的后台接口自然而然也就都出来了；")]),this._v(" "),e("li",[this._v("2 以springboot开发一个简易后台，实现前端的mock接口；再逐步扩充批处理功能、鉴权、多租户、消息队列集成等；")]),this._v(" "),e("li",[this._v("3 springboot完成后，再进行微服务化，以springcloud模块将其拆分；")]),this._v(" "),e("li",[this._v("4 高可用；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"前后端分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离","aria-hidden":"true"}},[this._v("#")]),this._v(" 前后端分离")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"选择一个脚手架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择一个脚手架","aria-hidden":"true"}},[this._v("#")]),this._v(" 选择一个脚手架")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("UI层使用element")]),t._v(" "),i("li",[t._v("集成eslint")]),t._v(" "),i("li",[t._v("集成单元测试工具")]),t._v(" "),i("li",[t._v("使用axios代替ajax")]),t._v(" "),i("li",[t._v("基于vue-router的配置化路由")]),t._v(" "),i("li",[t._v("token管理")]),t._v(" "),i("li",[t._v("数据mock")]),t._v(" "),i("li",[t._v("icon定制")]),t._v(" "),i("li",[t._v("基于vuex的状态管理")]),t._v(" "),i("li",[t._v("404异常")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("国际化")]),this._v(" "),e("li",[this._v("websocket")]),this._v(" "),e("li",[this._v("多租户切换")])])}],!1,null,null,null);e.default=v.exports}}]);